'use strict';

var db = require('../db/config.js');
var request = require('request');
var session = require('express-session');

var User = db.User;
var Movie = db.Movie;

var omdb = 'http://www.omdbapi.com/?';

module.exports = {
  login: function login(req, res, next) {
    console.log(req.body);
  },
  addMovie: function addMovie(req, res, next) {
    var movie = req.body.movie.split(' ').join('+');
    var url = omdb + 'tomatoes=true&t=' + movie;
    Movie.find({ title: req.body.movie }).then(function (movies) {
      // add movie to db if the query returned empty
      if (!movies.length) {
        request(url, function (err, response, body) {
          if (err) {
            console.log('error from omdb request: ', err);
          } else {
            var data = JSON.parse(response.body);
            console.log(data);
            var info = {
              title: data.Title,
              year: data.Year,
              img: data.Poster,
              length: data.Runtime,
              plot: data.Plot,
              rating: data.tomatoUserRating
            };
            new Movie(info).save().then(function (movie) {
              console.log('saving movie to db');
              res.send(movie);
            });
          }
        });
      } else {
        res.send(movies[0]);
      }
    }).catch(function (err) {
      console.log('error in finding movies: ', err);
    });
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXJ2ZXIvaGFuZGxlcnMuanMiXSwibmFtZXMiOlsiZGIiLCJyZXF1aXJlIiwicmVxdWVzdCIsInNlc3Npb24iLCJVc2VyIiwiTW92aWUiLCJvbWRiIiwibW9kdWxlIiwiZXhwb3J0cyIsImxvZ2luIiwicmVxIiwicmVzIiwibmV4dCIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwiYWRkTW92aWUiLCJtb3ZpZSIsInNwbGl0Iiwiam9pbiIsInVybCIsImZpbmQiLCJ0aXRsZSIsInRoZW4iLCJtb3ZpZXMiLCJsZW5ndGgiLCJlcnIiLCJyZXNwb25zZSIsImRhdGEiLCJKU09OIiwicGFyc2UiLCJpbmZvIiwiVGl0bGUiLCJ5ZWFyIiwiWWVhciIsImltZyIsIlBvc3RlciIsIlJ1bnRpbWUiLCJwbG90IiwiUGxvdCIsInJhdGluZyIsInRvbWF0b1VzZXJSYXRpbmciLCJzYXZlIiwic2VuZCIsImNhdGNoIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLEtBQUtDLFFBQVEsaUJBQVIsQ0FBVDtBQUNBLElBQUlDLFVBQVVELFFBQVEsU0FBUixDQUFkO0FBQ0EsSUFBSUUsVUFBVUYsUUFBUSxpQkFBUixDQUFkOztBQUVBLElBQUlHLE9BQU9KLEdBQUdJLElBQWQ7QUFDQSxJQUFJQyxRQUFRTCxHQUFHSyxLQUFmOztBQUVBLElBQUlDLE9BQU8sMEJBQVg7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUI7QUFDZkMsU0FBTyxlQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN6QkMsWUFBUUMsR0FBUixDQUFZSixJQUFJSyxJQUFoQjtBQUVELEdBSmM7QUFLZkMsWUFBVSxrQkFBQ04sR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDNUIsUUFBSUssUUFBUVAsSUFBSUssSUFBSixDQUFTRSxLQUFULENBQWVDLEtBQWYsQ0FBcUIsR0FBckIsRUFBMEJDLElBQTFCLENBQStCLEdBQS9CLENBQVo7QUFDQSxRQUFJQyxNQUFNZCxPQUFPLGtCQUFQLEdBQTRCVyxLQUF0QztBQUNBWixVQUFNZ0IsSUFBTixDQUFXLEVBQUNDLE9BQU9aLElBQUlLLElBQUosQ0FBU0UsS0FBakIsRUFBWCxFQUFvQ00sSUFBcEMsQ0FBeUMsVUFBQ0MsTUFBRCxFQUFZO0FBQ25EO0FBQ0EsVUFBSSxDQUFDQSxPQUFPQyxNQUFaLEVBQW9CO0FBQ2xCdkIsZ0JBQVFrQixHQUFSLEVBQWEsVUFBU00sR0FBVCxFQUFjQyxRQUFkLEVBQXdCWixJQUF4QixFQUE4QjtBQUN6QyxjQUFJVyxHQUFKLEVBQVM7QUFDUGIsb0JBQVFDLEdBQVIsQ0FBWSwyQkFBWixFQUF5Q1ksR0FBekM7QUFDRCxXQUZELE1BRU87QUFDTCxnQkFBSUUsT0FBT0MsS0FBS0MsS0FBTCxDQUFXSCxTQUFTWixJQUFwQixDQUFYO0FBQ0FGLG9CQUFRQyxHQUFSLENBQVljLElBQVo7QUFDQSxnQkFBSUcsT0FBTztBQUNUVCxxQkFBT00sS0FBS0ksS0FESDtBQUVUQyxvQkFBTUwsS0FBS00sSUFGRjtBQUdUQyxtQkFBS1AsS0FBS1EsTUFIRDtBQUlUWCxzQkFBUUcsS0FBS1MsT0FKSjtBQUtUQyxvQkFBTVYsS0FBS1csSUFMRjtBQU1UQyxzQkFBUVosS0FBS2E7QUFOSixhQUFYO0FBUUEsZ0JBQUlwQyxLQUFKLENBQVUwQixJQUFWLEVBQWdCVyxJQUFoQixHQUF1Qm5CLElBQXZCLENBQTRCLFVBQVNOLEtBQVQsRUFBZ0I7QUFDMUNKLHNCQUFRQyxHQUFSLENBQVksb0JBQVo7QUFDQUgsa0JBQUlnQyxJQUFKLENBQVMxQixLQUFUO0FBQ0QsYUFIRDtBQUlEO0FBQ0YsU0FuQkQ7QUFvQkQsT0FyQkQsTUFxQk87QUFDTE4sWUFBSWdDLElBQUosQ0FBU25CLE9BQU8sQ0FBUCxDQUFUO0FBQ0Q7QUFDRixLQTFCRCxFQTBCR29CLEtBMUJILENBMEJTLFVBQUNsQixHQUFELEVBQVM7QUFDaEJiLGNBQVFDLEdBQVIsQ0FBWSwyQkFBWixFQUF5Q1ksR0FBekM7QUFDRCxLQTVCRDtBQTZCRDtBQXJDYyxDQUFqQiIsImZpbGUiOiJoYW5kbGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkYiA9IHJlcXVpcmUoJy4uL2RiL2NvbmZpZy5qcycpO1xudmFyIHJlcXVlc3QgPSByZXF1aXJlKCdyZXF1ZXN0Jyk7XG52YXIgc2Vzc2lvbiA9IHJlcXVpcmUoJ2V4cHJlc3Mtc2Vzc2lvbicpO1xuXG52YXIgVXNlciA9IGRiLlVzZXI7XG52YXIgTW92aWUgPSBkYi5Nb3ZpZTtcblxudmFyIG9tZGIgPSAnaHR0cDovL3d3dy5vbWRiYXBpLmNvbS8/J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbG9naW46IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKHJlcS5ib2R5KTtcbiAgICBcbiAgfSxcbiAgYWRkTW92aWU6IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHZhciBtb3ZpZSA9IHJlcS5ib2R5Lm1vdmllLnNwbGl0KCcgJykuam9pbignKycpO1xuICAgIHZhciB1cmwgPSBvbWRiICsgJ3RvbWF0b2VzPXRydWUmdD0nICsgbW92aWU7XG4gICAgTW92aWUuZmluZCh7dGl0bGU6IHJlcS5ib2R5Lm1vdmllfSkudGhlbigobW92aWVzKSA9PiB7XG4gICAgICAvLyBhZGQgbW92aWUgdG8gZGIgaWYgdGhlIHF1ZXJ5IHJldHVybmVkIGVtcHR5XG4gICAgICBpZiAoIW1vdmllcy5sZW5ndGgpIHtcbiAgICAgICAgcmVxdWVzdCh1cmwsIGZ1bmN0aW9uKGVyciwgcmVzcG9uc2UsIGJvZHkpIHtcbiAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgZnJvbSBvbWRiIHJlcXVlc3Q6ICcsIGVycik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZS5ib2R5KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgICAgdmFyIGluZm8gPSB7XG4gICAgICAgICAgICAgIHRpdGxlOiBkYXRhLlRpdGxlLFxuICAgICAgICAgICAgICB5ZWFyOiBkYXRhLlllYXIsXG4gICAgICAgICAgICAgIGltZzogZGF0YS5Qb3N0ZXIsXG4gICAgICAgICAgICAgIGxlbmd0aDogZGF0YS5SdW50aW1lLFxuICAgICAgICAgICAgICBwbG90OiBkYXRhLlBsb3QsXG4gICAgICAgICAgICAgIHJhdGluZzogZGF0YS50b21hdG9Vc2VyUmF0aW5nXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBuZXcgTW92aWUoaW5mbykuc2F2ZSgpLnRoZW4oZnVuY3Rpb24obW92aWUpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3NhdmluZyBtb3ZpZSB0byBkYicpO1xuICAgICAgICAgICAgICByZXMuc2VuZChtb3ZpZSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcy5zZW5kKG1vdmllc1swXSk7XG4gICAgICB9XG4gICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ2Vycm9yIGluIGZpbmRpbmcgbW92aWVzOiAnLCBlcnIpO1xuICAgIH0pXG4gIH1cbn0iXX0=