'use strict';

var express = require('express');
var path = require('path');
var bodyParser = require('body-parser');
var mongoose = require('mongoose');
var handlers = require('./handlers.js');
var session = require('express-session');
mongoose.Promise = require('bluebird');

mongoose.connect('mongodb://localhost/notelist');

var app = express();

app.use(session({ secret: 'secret', username: null, password: null, resave: true, saveUninitialized: true }));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// app.use('/', express.static(path.join(__dirname, '../client')));
app.use('/', handlers.checkSession, express.static(path.join(__dirname, '../client')));
app.use('/lib', express.static(path.join(__dirname, '../../node_modules')));
app.use('/login', express.static(path.join(__dirname, '../client/pages/login.html')));
app.use('/logout', handlers.logout);
app.use('/signup', express.static(path.join(__dirname, '../client/pages/signup.html')));

app.post('/signup', handlers.signup);
app.post('/login', handlers.login);
app.post('/movies/search', handlers.addMovie);

app.listen(8000);
console.log('Listening on 127.0.0.1:8000');

module.exports = app;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXJ2ZXIvc2VydmVyLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicGF0aCIsImJvZHlQYXJzZXIiLCJtb25nb29zZSIsImhhbmRsZXJzIiwic2Vzc2lvbiIsIlByb21pc2UiLCJjb25uZWN0IiwiYXBwIiwidXNlIiwic2VjcmV0IiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImNoZWNrU2Vzc2lvbiIsInN0YXRpYyIsImpvaW4iLCJfX2Rpcm5hbWUiLCJsb2dvdXQiLCJwb3N0Iiwic2lnbnVwIiwibG9naW4iLCJhZGRNb3ZpZSIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFVBQVVDLFFBQVEsU0FBUixDQUFkO0FBQ0EsSUFBSUMsT0FBT0QsUUFBUSxNQUFSLENBQVg7QUFDQSxJQUFJRSxhQUFhRixRQUFRLGFBQVIsQ0FBakI7QUFDQSxJQUFJRyxXQUFXSCxRQUFRLFVBQVIsQ0FBZjtBQUNBLElBQUlJLFdBQVdKLFFBQVEsZUFBUixDQUFmO0FBQ0EsSUFBSUssVUFBVUwsUUFBUSxpQkFBUixDQUFkO0FBQ0FHLFNBQVNHLE9BQVQsR0FBbUJOLFFBQVEsVUFBUixDQUFuQjs7QUFFQUcsU0FBU0ksT0FBVCxDQUFpQiw4QkFBakI7O0FBRUEsSUFBSUMsTUFBTVQsU0FBVjs7QUFFQVMsSUFBSUMsR0FBSixDQUFRSixRQUFRLEVBQUNLLFFBQVEsUUFBVCxFQUFtQkMsVUFBVSxJQUE3QixFQUFtQ0MsVUFBVSxJQUE3QyxFQUFtREMsUUFBUSxJQUEzRCxFQUFpRUMsbUJBQW1CLElBQXBGLEVBQVIsQ0FBUjtBQUNBTixJQUFJQyxHQUFKLENBQVFQLFdBQVdhLElBQVgsRUFBUjtBQUNBUCxJQUFJQyxHQUFKLENBQVFQLFdBQVdjLFVBQVgsQ0FBc0IsRUFBQ0MsVUFBVSxJQUFYLEVBQXRCLENBQVI7O0FBRUE7QUFDQVQsSUFBSUMsR0FBSixDQUFRLEdBQVIsRUFBYUwsU0FBU2MsWUFBdEIsRUFBb0NuQixRQUFRb0IsTUFBUixDQUFlbEIsS0FBS21CLElBQUwsQ0FBVUMsU0FBVixFQUFxQixXQUFyQixDQUFmLENBQXBDO0FBQ0FiLElBQUlDLEdBQUosQ0FBUSxNQUFSLEVBQWdCVixRQUFRb0IsTUFBUixDQUFlbEIsS0FBS21CLElBQUwsQ0FBVUMsU0FBVixFQUFxQixvQkFBckIsQ0FBZixDQUFoQjtBQUNBYixJQUFJQyxHQUFKLENBQVEsUUFBUixFQUFrQlYsUUFBUW9CLE1BQVIsQ0FBZWxCLEtBQUttQixJQUFMLENBQVVDLFNBQVYsRUFBcUIsNEJBQXJCLENBQWYsQ0FBbEI7QUFDQWIsSUFBSUMsR0FBSixDQUFRLFNBQVIsRUFBbUJMLFNBQVNrQixNQUE1QjtBQUNBZCxJQUFJQyxHQUFKLENBQVEsU0FBUixFQUFtQlYsUUFBUW9CLE1BQVIsQ0FBZWxCLEtBQUttQixJQUFMLENBQVVDLFNBQVYsRUFBcUIsNkJBQXJCLENBQWYsQ0FBbkI7O0FBR0FiLElBQUllLElBQUosQ0FBUyxTQUFULEVBQW9CbkIsU0FBU29CLE1BQTdCO0FBQ0FoQixJQUFJZSxJQUFKLENBQVMsUUFBVCxFQUFtQm5CLFNBQVNxQixLQUE1QjtBQUNBakIsSUFBSWUsSUFBSixDQUFTLGdCQUFULEVBQTJCbkIsU0FBU3NCLFFBQXBDOztBQUVBbEIsSUFBSW1CLE1BQUosQ0FBVyxJQUFYO0FBQ0FDLFFBQVFDLEdBQVIsQ0FBWSw2QkFBWjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQnZCLEdBQWpCIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG52YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xudmFyIGhhbmRsZXJzID0gcmVxdWlyZSgnLi9oYW5kbGVycy5qcycpO1xudmFyIHNlc3Npb24gPSByZXF1aXJlKCdleHByZXNzLXNlc3Npb24nKTtcbm1vbmdvb3NlLlByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xuXG5tb25nb29zZS5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0L25vdGVsaXN0Jyk7XG5cbnZhciBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2Uoc2Vzc2lvbih7c2VjcmV0OiAnc2VjcmV0JywgdXNlcm5hbWU6IG51bGwsIHBhc3N3b3JkOiBudWxsLCByZXNhdmU6IHRydWUsIHNhdmVVbmluaXRpYWxpemVkOiB0cnVlfSkpXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtleHRlbmRlZDogdHJ1ZX0pKTtcblxuLy8gYXBwLnVzZSgnLycsIGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9jbGllbnQnKSkpO1xuYXBwLnVzZSgnLycsIGhhbmRsZXJzLmNoZWNrU2Vzc2lvbiwgZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uL2NsaWVudCcpKSk7XG5hcHAudXNlKCcvbGliJywgZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uLy4uL25vZGVfbW9kdWxlcycpKSk7XG5hcHAudXNlKCcvbG9naW4nLCBleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vY2xpZW50L3BhZ2VzL2xvZ2luLmh0bWwnKSkpXG5hcHAudXNlKCcvbG9nb3V0JywgaGFuZGxlcnMubG9nb3V0KTtcbmFwcC51c2UoJy9zaWdudXAnLCBleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vY2xpZW50L3BhZ2VzL3NpZ251cC5odG1sJykpKVxuXG5cbmFwcC5wb3N0KCcvc2lnbnVwJywgaGFuZGxlcnMuc2lnbnVwKTtcbmFwcC5wb3N0KCcvbG9naW4nLCBoYW5kbGVycy5sb2dpbik7XG5hcHAucG9zdCgnL21vdmllcy9zZWFyY2gnLCBoYW5kbGVycy5hZGRNb3ZpZSk7XG5cbmFwcC5saXN0ZW4oODAwMCk7XG5jb25zb2xlLmxvZygnTGlzdGVuaW5nIG9uIDEyNy4wLjAuMTo4MDAwJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdfQ==